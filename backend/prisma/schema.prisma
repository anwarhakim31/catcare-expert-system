generator client {
  provider = "prisma-client-js"
   
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") 
}

model User{
   username String @id @unique @db.VarChar(100) 
   fullname String 
   password String 
   photo String? 
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
   isAdmin Boolean @default(false)

   history Diagnosis[]

   @@map("users")
}

model Symptom{
    id String @id       
    symptom String 
    createdAt DateTime @default(now())

    rules Rule[]

    @@map("symptoms")
}


model Disease{
    id String @id 
    name String @unique 
    image String
    createdAt DateTime @default(now())
    description String
    solution String

    rules Rule[]
  modus  Int @default(0)
   @@map("diseases")
}

model Rule {
  id          String    @id @default(cuid())
  diseaseId   String
  symptomId   String

  
  disease     Disease   @relation(fields: [diseaseId], references: [id], onDelete: Cascade)
  symptom   Symptom  @relation(fields: [symptomId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())

  @@map("rules")
  @@unique([diseaseId, symptomId])
}

model Diagnosis{
  id String @id @default(uuid())
  symptoms Json 
  scor Int? @default(0)
  expired Int
  disease Json? 
  status  DiagnosisStatus @default(pending)
  createdAt DateTime @default(now())
  username String
  user User @relation(fields: [username],references: [username],onDelete: Cascade)

  @@map("diagnosis")
}

enum DiagnosisStatus {
  pending
  cancel
  finish
}